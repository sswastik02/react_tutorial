{"version":3,"sources":["Components/counterControlled.jsx","Components/countersController.jsx","index.js"],"names":["CounterCntrl","console","log","this","props","className","children","formatCountBage","style","fontSize","formatCount","padding","onClick","onIncrement","id","onDecrement","onDelete","value","Component","CountersCntrl","state","counters","handleIncrement","cId","setState","map","counter","handleDecrement","handleReset","handleDelete","filter","Fragment","background","height","width","color","marginLeft","borderRadius","marginTop","marginBottom","computeCounters","c","i","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdcb2da1.chunk.js","sourcesContent":["// a controlled component will recieve all data from props and send data from props\n// so it cant have a local state \n// this.state => this.props\n\nimport { Component } from 'react';\nclass CounterCntrl extends Component {\n    render() { \n        console.log(\"props\",this.props)\n        return ( \n            <div>\n                <div className=\"title m-2\">{this.props.children}</div>\n                <div className={this.formatCountBage()} style={{fontSize:20}}>{this.formatCount()}</div>\n                <button style={{fontSize:20, padding:10}} onClick={()=>this.props.onIncrement(this.props.id)} className=\"btn btn-secondary m-2\">Increment</button>\n                <button style={{fontSize:20, padding:10}} onClick={()=>this.props.onDecrement(this.props.id)} className=\"btn btn-secondary m-2\">Decrement</button>\n                <button style={{fontSize:20, padding:10}} onClick={()=>this.props.onDelete(this.props.id)} className=\"btn btn-danger m-2\">Delete</button>\n                \n            </div>\n         );\n    }\n\n    // handleIncrement = () => this.setState({count:this.state.count+1})\n    // handleDecrement = () => this.setState({count:(this.state.count === 0)?0:this.state.count-1})\n    // these needs to be handled by countersController to control counterControlled\n\n    formatCountBage() {\n        let className = \"badge m-2 p-3 badge-\"\n        if(this.props.value ===0) className+=\"warning\"\n        else className+=\"primary\"\n        return className\n    }\n\n    formatCount() {\n        if(this.props.value === 0) return \"Zero\"\n        return this.props.value\n    }\n\n}\n \nexport default CounterCntrl;","import React, { Component } from 'react';\nimport CounterCntrl from \"./counterControlled\"\n\nclass CountersCntrl extends Component {\n    state = { \n        counters:[\n            {id:1,value:0},\n            {id:2,value:2},\n            {id:3,value:3},\n            {id:4,value:0}\n        ]\n     }\n    render() { \n        return <React.Fragment>\n            <nav style={{background:\"blue\",height:50,width:\"100vw\"}}>\n                \n                    <p style={{color:\"white\",fontSize:35,marginLeft:20}}> Number: <span style={{background:\"grey\",borderRadius:20,padding:3,marginTop:2,marginBottom:2}}>{this.computeCounters()}</span></p>\n                \n            </nav>\n        <div>\n            <div className=\"reset\">\n                <button onClick={this.handleReset} className=\"btn btn-primary m-2\">Reset</button>\n            </div>\n        <div className=\"Counters\">\n            {this.state.counters.map(counter =>\n                 <CounterCntrl key={counter.id} onIncrement={this.handleIncrement} onDecrement={this.handleDecrement} onDelete={this.handleDelete} id={counter.id} value={counter.value}> \n                 <h4>Counter no. {counter.id}</h4> \n                 </CounterCntrl>\n            )}\n            </div>\n        </div>\n        </React.Fragment>\n    }\n\n    computeCounters(){\n        let c=0;\n        for (let i = 0; i < this.state.counters.length; i++) {\n            const element = this.state.counters[i];\n            if(element.value !== 0)\n            c++;\n            \n        }\n        return c;\n    }\n\n    handleIncrement = (cId) => this.setState({\n        counters:this.state.counters.map(counter=>{\n            if(counter.id === cId)\n            counter.value++\n            return counter\n        })\n    })\n    handleDecrement = (cId) => this.setState({\n        counters:this.state.counters.map(counter=>{\n            if(counter.id === cId)\n            counter.value=(counter.value===0)?0:counter.value-1\n            return counter\n        })\n    })\n\n    handleReset =()=>{\n        console.log(\"Reset\")\n        this.setState({\n            counters:this.state.counters.map(counter=>{\n                counter.value=0\n                return counter\n            })\n        })\n       console.log(this.state.counters)\n    }\n\n    handleDelete=(cId)=>{\n        console.log(cId)\n        this.setState({\n            counters:this.state.counters.filter(counter=>counter.id!==cId)\n        })\n    }\n}\n \nexport default CountersCntrl;\n\n// now with this arrangement of parent and controlled child keeps a single source of truth for all data resetting this will reset all children elements \n","import ReactDOM from \"react-dom\"\n//import Counter from \"./Components/counter\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import CounterAlt from \"./Components/counterAlt\"\n//import Counters from \"./Components/counters\"\nimport CountersController from \"./Components/countersController\"\n\nReactDOM.render(\n    //<Counter/>,\n    //<CounterAlt/>,\n    //<Counters/>,\n    <CountersController/>,\n    document.getElementById(\"root\"),\n\n)\n\n// this is how you can use classes to create html elements\n// this way you just have to call Counter class everytime you\n// need a counter"],"sourceRoot":""}